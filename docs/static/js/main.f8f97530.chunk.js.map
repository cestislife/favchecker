{"version":3,"sources":["FavChecker/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["clothingTypes","ownVillagersCache","JSON","parse","localStorage","getItem","_","VillagerContainer","styled","div","Credits","MainContainer","ItemUnit","ItemVariant","VillagerProfile","VillagerCheckbox","isOwnedVillager","css","VillagerName","VillagerLikes","VillagerRow","VariantCircle","VariantYes","VariantNo","VillagerSearcher","ItemSearcher","ItemSearcherResult","ItemSearcherResultContainer","FavChecker","useState","villagerNameQuery","setVillagerNameQuery","itemNameQuery","setItemNameQuery","ownVillagers","setOwnVillagers","useEffect","setItem","stringify","villagerNames","Object","keys","villagersData","itemNames","itemsData","filteredVillagerNames","filter","name","indexOf","toLowerCase","sort","vA","vB","vAi","vBi","filteredItemNames","type","setItemQueryTo","iName","addVillagerToOwn","vName","v","value","onChange","e","currentTarget","placeholder","length","map","key","onClick","vData","shortListed","pers","likes","join","itemData","commonAttribute","values","attributes","reduce","c","n","val","entries","attrKey","attrs","isFav","App","window","location","hash","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8f97530.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport villagersData from './data/villagers.json';\nimport itemsData from './data/items.json';\nimport styled, { css } from 'styled-components';\n\ntype VillagerName = keyof typeof villagersData;\ntype ItemName = keyof typeof itemsData;\n\nconst clothingTypes = [\n  'accessories', \n  'bags', \n  'headwear', \n  'shoes', \n  'dresses', \n  'bottoms', \n  'socks', \n  'tops',\n  // 'umbrellas',\n  // 'music',\n  // 'bugs',\n  // 'fish',\n  // 'floors',\n  // 'wallpapers',\n  // 'fossils',\n  // 'rugs',\n  // 'wall mounted',\n  // 'misc',\n  // 'housewares',\n];\n\nlet ownVillagersCache: VillagerName[] = [];\nconst ownVillagersCacheKey = 'ownVillagersCache';\ntry {\n  ownVillagersCache = JSON.parse(localStorage.getItem(ownVillagersCacheKey) || '[]');\n} catch (_) {}\n\nconst FavChecker = () => {\n  const [villagerNameQuery, setVillagerNameQuery] = useState('');\n  const [itemNameQuery, setItemNameQuery] = useState('');\n  const [ownVillagers, setOwnVillagers] = useState(ownVillagersCache);\n\n  useEffect(() => {\n    localStorage.setItem(ownVillagersCacheKey, JSON.stringify(ownVillagers));\n  }, [ownVillagers]);\n  const onChangeVillagerName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget) {\n      setVillagerNameQuery(e.currentTarget.value);\n    }\n  };\n  const onChangeItemName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget) {\n      setItemNameQuery(e.currentTarget.value);\n    }\n  };\n\n  const villagerNames = Object.keys(villagersData) as VillagerName[];\n  const itemNames = Object.keys(itemsData) as ItemName[];\n  const filteredVillagerNames = villagerNames.filter((name) => {\n    return ownVillagers.indexOf(name) !== -1\n      || (\n        villagerNameQuery !== ''\n        && name.toLowerCase().indexOf(villagerNameQuery.toLowerCase()) !== -1\n      );\n  }).sort((vA, vB) => {\n    const vAi = ownVillagers.indexOf(vA);\n    const vBi = ownVillagers.indexOf(vB);\n    if (vAi === vBi) {\n      return vA > vB ? 1 : -1;\n    }\n    if (vAi === -1) {\n      return 1;\n    }\n    if (vBi === -1) {\n      return -1;\n    }\n    return vA > vB ? 1 : -1;\n  });\n\n  const filteredItemNames = itemNames.filter((name) => {\n    return itemNameQuery !== ''\n      && clothingTypes.indexOf(itemsData[name].type) !== -1\n      && name.toLowerCase().indexOf(itemNameQuery.toLowerCase()) !== -1;\n  }).sort();\n\n  const setItemQueryTo = (iName: ItemName) => {\n    return () => {\n      setItemNameQuery(iName);\n    };\n  };\n\n  const addVillagerToOwn = (vName: VillagerName) => {\n    return () => {\n      if (ownVillagers.indexOf(vName) === -1) {\n        setOwnVillagers([\n          ...ownVillagers,\n          vName,\n        ]);\n      } else {\n        setOwnVillagers(ownVillagers.filter(v => v !== vName));\n      }\n      setVillagerNameQuery('');\n    };\n  };\n\n  return <MainContainer>\n    <VillagerSearcher>\n      <input\n        value={villagerNameQuery}\n        onChange={onChangeVillagerName}\n        placeholder={'Type villager name here'}\n      />\n    </VillagerSearcher>\n    <ItemSearcher>\n      {itemNameQuery !== '' && filteredItemNames.length < 100 && <ItemSearcherResultContainer>\n        {filteredItemNames.map(iName => {\n          return <ItemSearcherResult\n            key={iName}\n            onClick={setItemQueryTo(iName)}\n          >\n            {iName}\n          </ItemSearcherResult>;\n        })}\n      </ItemSearcherResultContainer>}\n      {itemNameQuery !== '' && filteredItemNames.length >= 100 && <ItemSearcherResultContainer>\n        {filteredItemNames.length} results, keep typing\n      </ItemSearcherResultContainer>}\n      <input\n        value={itemNameQuery}\n        onChange={onChangeItemName}\n        placeholder={'Type item name here'}\n      />\n    </ItemSearcher>\n    <VillagerContainer>\n      {filteredVillagerNames.map(vName => {\n        const vData = villagersData[vName];\n        const isOwnedVillager = ownVillagers.indexOf(vName) !== -1;\n        const shortListed = filteredVillagerNames.length <= 20;\n        return <VillagerRow\n          key={vName}\n          isOwnedVillager={isOwnedVillager}\n        >\n          <VillagerProfile>\n            <VillagerCheckbox\n              onClick={addVillagerToOwn(vName)}\n              isOwnedVillager={isOwnedVillager}\n            />\n            <VillagerName>\n              {vName} is {vData.pers}\n            </VillagerName>\n            <VillagerLikes>\n              likes {vData.likes.join(', ')}\n            </VillagerLikes>\n          </VillagerProfile>\n          {(isOwnedVillager || shortListed) && filteredItemNames.length <= 10 && <div>\n            {filteredItemNames.map(iName => {\n              const itemData = itemsData[iName];\n              const commonAttribute = Object.values(itemData.attributes).reduce((c, n) => {\n                if (!c || c.length === 0) {\n                  return n;\n                }\n                if (!n) {\n                  return c;\n                }\n                return c.filter(val => n.indexOf(val) !== -1);\n              }, []);\n              return <ItemUnit key={iName}>\n                <div>\n                  {iName} {commonAttribute && `(${commonAttribute.join(', ')})`}\n                </div>\n                <div>\n                  {Object.entries(itemData.attributes).map(([attrKey, attrs]) => {\n                    if (!attrs) {\n                      return null;\n                    }\n                    const isFav = attrs.reduce((c, n) => {\n                      return c || vData.likes.indexOf(n) !== -1;\n                    }, false);\n                    return <ItemVariant key={attrKey}>\n                      {isFav ? <VariantYes/> : <VariantNo/>}\n                      <span>\n                        {attrKey}\n                      </span>\n                    </ItemVariant>;\n                  })}\n                </div>\n              </ItemUnit>;\n            })}\n          </div>}\n        </VillagerRow>;\n      })}\n    </VillagerContainer>\n    <Credits>\n      based on datamined data compiled by discord user jhenebean#8648\n    </Credits>\n  </MainContainer>;\n};\n\nconst VillagerContainer = styled.div`\n  min-height: 90vh;\n`;\n\nconst Credits = styled.div`\n  bottom: 4px;\n  left: 4px;\n  font-size: 10px;\n  font-family: monospace;\n`;\n\nconst MainContainer = styled.div`\n  padding: 46px 8px;\n  input {\n    border: none;\n    border-radius: 4px;\n    background: #fff;\n    padding: 4px 8px;\n    line-height: 2em;\n    width: 100%;\n    box-sizing: border-box;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst ItemUnit = styled.div`\n  font-size: 12px;\n  padding: 4px 8px;\n  &:nth-child(2n - 1) {\n    background: rgba(255, 255, 255, 0.2);\n  }\n  &:nth-child(2n - 2) {\n    background: rgba(255, 255, 255, 0.1);\n  }\n`;\nconst ItemVariant = styled.div`\n  margin-left: 10px;\n  display: inline-block;\n  > span {\n    vertical-align: middle;\n  }\n`;\n\nconst VillagerProfile = styled.div`\n  position: sticky;\n  top: 38px;\n  background: #292929;\n  padding: 10px;\n  border-radius: 4px 4px 0 0;\n`;\n\ninterface VillagerCheckboxProps {\n  isOwnedVillager: boolean;\n}\nconst VillagerCheckbox = styled.div<VillagerCheckboxProps>`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n  border-radius: 20px;\n  box-sizing: border-box;\n  border: solid 2px #fff;\n  margin-right: 8px;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    opacity: 0.9;\n  }\n\n  &::before {\n    content: '';\n    width: 20px;\n    height: 20px;\n    display: block;\n    border-radius: 20px;\n    background: #fff;\n    transition: transform 0.2s;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translateX(-50%) translateY(-50%) scale(0);\n  }\n\n  ${({ isOwnedVillager }) => isOwnedVillager && css`\n    &::before {\n      transform: translateX(-50%) translateY(-50%);\n    }\n  `}\n`;\nconst VillagerName = styled.div`\n  display: inline-block;\n  vertical-align: middle;\n`;\nconst VillagerLikes = styled.div`\n  margin: 4px 32px;\n  font-size: 10px;\n`;\n\ninterface VillagerRowProps {\n  isOwnedVillager: boolean;\n}\nconst VillagerRow = styled.div<VillagerRowProps>`\n  margin: 4px 4px 12px;\n  border-radius: 2px;\n  cursor: pointer;\n  transition: transform 0.2s;\n  border-radius: 4px;\n  background: #292929;\n\n  &:hover {\n    background: rgba(255, 255, 255, 0.15);\n  }\n\n  ${({ isOwnedVillager }) => isOwnedVillager && css`\n    &:hover {\n    }\n  `}\n`;\n\nconst VariantCircle = styled.div`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n  display: inline-block;\n  vertical-align: middle;\n  margin: 0 4px;\n`;\nconst VariantYes = styled(VariantCircle)`\n  background: #6f6;\n`;\nconst VariantNo = styled(VariantCircle)`\n  background: #f66;\n`;\n\nconst VillagerSearcher = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  background: #999;\n  box-sizing: border-box;\n  color: #222;\n  padding: 4px;\n  overflow: auto;\n  z-index: 1;\n`;\n\nconst ItemSearcher = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #999;\n  box-sizing: border-box;\n  color: #222;\n  padding: 4px;\n  overflow: auto;\n  z-index: 1;\n`;\nconst ItemSearcherResult = styled.div`\n  padding: 2px 4px;\n  font-size: 12px;\n  cursor: pointer;\n  display: inline-block;\n  background: #fff;\n  border-radius: 2px;\n  margin-right: 4px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nconst ItemSearcherResultContainer = styled.div`\n  white-space: nowrap;\n  width: 100%;\n  overflow: auto;\n  padding-bottom: 8px;\n`;\n\nexport default FavChecker;\n","import React from 'react';\n\nimport FieldMaker from './FieldMaker';\nimport IsabelleMaker from './IsabelleMaker/index';\nimport FlowerExplainer from './FlowerExplainer';\nimport FlowerCrosser from './FlowerCrosser';\nimport FavChecker from './FavChecker';\n\nfunction App() {\n  const hash = window.location.hash;\n  return <>\n    <FavChecker/>\n  </>;\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}